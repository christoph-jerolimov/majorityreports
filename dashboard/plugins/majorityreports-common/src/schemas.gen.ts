// This file is auto-generated by @hey-api/openapi-ts

export const $ActorEntity = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        deletedTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Deletedtimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels',
            default: {}
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations',
            default: {}
        }
    },
    type: 'object',
    required: ['namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'deletedTimestamp'],
    title: 'ActorEntity'
} as const;

export const $ActorsResult = {
    properties: {
        count: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Count'
        },
        items: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/ActorEntity'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Items'
        }
    },
    type: 'object',
    title: 'ActorsResult'
} as const;

export const $EventEntity = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        actor_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Actor Name'
        },
        item_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Item Name'
        },
        creationTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        deletedTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Deletedtimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels',
            default: {}
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations',
            default: {}
        },
        type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Type'
        },
        value: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Value'
        }
    },
    type: 'object',
    required: ['namespace_name', 'name', 'actor_name', 'item_name', 'creationTimestamp', 'updateTimestamp', 'deletedTimestamp', 'type', 'value'],
    title: 'EventEntity'
} as const;

export const $EventsResult = {
    properties: {
        count: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Count'
        },
        items: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/EventEntity'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Items'
        }
    },
    type: 'object',
    title: 'EventsResult'
} as const;

export const $FeedbackEntity = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        actor_name: {
            type: 'string',
            title: 'Actor Name'
        },
        item_name: {
            type: 'string',
            title: 'Item Name'
        },
        creationTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        deletedTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Deletedtimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels',
            default: {}
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations',
            default: {}
        },
        type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Type'
        },
        value: {
            type: 'string',
            title: 'Value'
        }
    },
    type: 'object',
    required: ['namespace_name', 'name', 'actor_name', 'item_name', 'creationTimestamp', 'updateTimestamp', 'deletedTimestamp', 'type', 'value'],
    title: 'FeedbackEntity'
} as const;

export const $FeedbacksResult = {
    properties: {
        count: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Count'
        },
        items: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/FeedbackEntity'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Items'
        }
    },
    type: 'object',
    title: 'FeedbacksResult'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $ItemEntity = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        deletedTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Deletedtimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels',
            default: {}
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations',
            default: {}
        }
    },
    type: 'object',
    required: ['namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'deletedTimestamp'],
    title: 'ItemEntity'
} as const;

export const $ItemMinMax = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            type: 'string',
            format: 'date-time',
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels'
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations'
        },
        count: {
            type: 'integer',
            title: 'Count'
        },
        min: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Min'
        },
        max: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Max'
        }
    },
    type: 'object',
    required: ['uid', 'namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'labels', 'annotations', 'count', 'min', 'max'],
    title: 'ItemMinMax'
} as const;

export const $ItemWithEventCount = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            type: 'string',
            format: 'date-time',
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels'
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['uid', 'namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'labels', 'annotations', 'count'],
    title: 'ItemWithEventCount'
} as const;

export const $ItemWithEventDetails = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            type: 'string',
            format: 'date-time',
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels'
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations'
        },
        eventUid: {
            type: 'string',
            format: 'uuid',
            title: 'Eventuid'
        },
        eventName: {
            type: 'string',
            title: 'Eventname'
        },
        eventActor: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Eventactor'
        },
        eventCreated: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Eventcreated'
        },
        eventUpdated: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Eventupdated'
        },
        eventLabels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Eventlabels'
        },
        eventAnnotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Eventannotations'
        },
        eventType: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Eventtype'
        },
        eventValue: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Eventvalue'
        }
    },
    type: 'object',
    required: ['uid', 'namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'labels', 'annotations', 'eventUid', 'eventName', 'eventActor', 'eventCreated', 'eventUpdated', 'eventLabels', 'eventAnnotations', 'eventType', 'eventValue'],
    title: 'ItemWithEventDetails'
} as const;

export const $ItemWithFeedbackCount = {
    properties: {
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        namespace_name: {
            type: 'string',
            title: 'Namespace Name'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        creationTimestamp: {
            type: 'string',
            format: 'date-time',
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        labels: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Labels'
        },
        annotations: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Annotations'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['uid', 'namespace_name', 'name', 'creationTimestamp', 'updateTimestamp', 'labels', 'annotations', 'count'],
    title: 'ItemWithFeedbackCount'
} as const;

export const $ItemsResult = {
    properties: {
        count: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Count'
        },
        items: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/ItemEntity'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Items'
        }
    },
    type: 'object',
    title: 'ItemsResult'
} as const;

export const $ListMeta = {
    properties: {
        start: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start'
        },
        limit: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Limit'
        },
        itemCount: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Itemcount'
        },
        remainingItemCount: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Remainingitemcount'
        },
        next: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Next'
        }
    },
    type: 'object',
    title: 'ListMeta'
} as const;

export const $MinMax = {
    properties: {
        count: {
            type: 'integer',
            title: 'Count'
        },
        min: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Min'
        },
        max: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Max'
        }
    },
    type: 'object',
    required: ['count', 'min', 'max'],
    title: 'MinMax'
} as const;

export const $Namespace = {
    properties: {
        apiVersion: {
            type: 'string',
            title: 'Apiversion',
            default: 'v1alpha1'
        },
        kind: {
            type: 'string',
            title: 'Kind',
            default: 'Namespace'
        },
        meta: {
            '$ref': '#/components/schemas/NamespaceMeta'
        },
        spec: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/NamespaceSpec'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['meta'],
    title: 'Namespace'
} as const;

export const $NamespaceFilter = {
    properties: {
        names: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Names'
        },
        labelSelector: {
            anyOf: [
                {
                    additionalProperties: {
                        type: 'string'
                    },
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Labelselector'
        }
    },
    type: 'object',
    title: 'NamespaceFilter'
} as const;

export const $NamespaceList = {
    properties: {
        apiVersion: {
            type: 'string',
            title: 'Apiversion',
            default: 'v1alpha1'
        },
        kind: {
            type: 'string',
            title: 'Kind',
            default: 'NamespaceList'
        },
        meta: {
            '$ref': '#/components/schemas/ListMeta'
        },
        items: {
            items: {
                '$ref': '#/components/schemas/Namespace'
            },
            type: 'array',
            title: 'Items'
        }
    },
    type: 'object',
    required: ['meta', 'items'],
    title: 'NamespaceList'
} as const;

export const $NamespaceMeta = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        generateName: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Generatename'
        },
        uid: {
            type: 'string',
            format: 'uuid',
            title: 'Uid'
        },
        title: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Title'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        labels: {
            anyOf: [
                {
                    additionalProperties: {
                        type: 'string'
                    },
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Labels'
        },
        annotations: {
            anyOf: [
                {
                    additionalProperties: {
                        type: 'string'
                    },
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Annotations'
        },
        tags: {
            anyOf: [
                {
                    items: {
                        type: 'string'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Tags'
        },
        creationTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Creationtimestamp'
        },
        updateTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updatetimestamp'
        },
        deletedTimestamp: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Deletedtimestamp'
        }
    },
    type: 'object',
    title: 'NamespaceMeta'
} as const;

export const $NamespaceQuery = {
    properties: {
        apiVersion: {
            type: 'string',
            title: 'Apiversion',
            default: 'v1alpha1'
        },
        kind: {
            type: 'string',
            title: 'Kind',
            default: 'NamespaceQuery'
        },
        filter: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/NamespaceFilter'
                },
                {
                    type: 'null'
                }
            ]
        },
        exclude: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/NamespaceFilter'
                },
                {
                    type: 'null'
                }
            ]
        },
        order: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/OrderBy'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Order'
        },
        pagination: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/Pagination'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    title: 'NamespaceQuery'
} as const;

export const $NamespaceSpec = {
    properties: {
        lifecycle: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Lifecycle'
        },
        owner: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Owner'
        },
        contact: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Contact'
        }
    },
    type: 'object',
    title: 'NamespaceSpec'
} as const;

export const $OrderBy = {
    properties: {
        attribute: {
            type: 'string',
            title: 'Attribute'
        },
        direction: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Direction'
        }
    },
    type: 'object',
    required: ['attribute'],
    title: 'OrderBy'
} as const;

export const $Pagination = {
    properties: {
        start: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start'
        },
        limit: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Limit'
        }
    },
    type: 'object',
    title: 'Pagination'
} as const;

export const $Stats = {
    properties: {
        namespaces: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Namespaces'
        },
        actors: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Actors'
        },
        items: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Items'
        },
        events: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Events'
        },
        feedbacks: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Feedbacks'
        }
    },
    type: 'object',
    title: 'Stats'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;