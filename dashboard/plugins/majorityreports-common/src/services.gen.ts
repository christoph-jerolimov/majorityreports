// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { CreateNamespaceApiNamespacesPostData, CreateNamespaceApiNamespacesPostError, CreateNamespaceApiNamespacesPostResponse, ReadNamespacesApiNamespacesGetData, ReadNamespacesApiNamespacesGetError, ReadNamespacesApiNamespacesGetResponse, ReadNamespaceApiNamespacesNamespaceNameGetData, ReadNamespaceApiNamespacesNamespaceNameGetError, ReadNamespaceApiNamespacesNamespaceNameGetResponse, UpdateNamespaceApiNamespacesNamespaceNamePutData, UpdateNamespaceApiNamespacesNamespaceNamePutError, UpdateNamespaceApiNamespacesNamespaceNamePutResponse, DeleteNamespaceApiNamespacesNamespaceNameDeleteData, DeleteNamespaceApiNamespacesNamespaceNameDeleteError, DeleteNamespaceApiNamespacesNamespaceNameDeleteResponse, QueryNamespacesApiNamespacesQueryPostData, QueryNamespacesApiNamespacesQueryPostError, QueryNamespacesApiNamespacesQueryPostResponse, ReadItemsApiActorsGetData, ReadItemsApiActorsGetError, ReadItemsApiActorsGetResponse, QueryItemsApiActorsQueryPostData, QueryItemsApiActorsQueryPostError, QueryItemsApiActorsQueryPostResponse, ReadItemsApiItemsGetData, ReadItemsApiItemsGetError, ReadItemsApiItemsGetResponse, QueryItemsApiItemsQueryPostData, QueryItemsApiItemsQueryPostError, QueryItemsApiItemsQueryPostResponse, ReadItemsApiEventsGetData, ReadItemsApiEventsGetError, ReadItemsApiEventsGetResponse, QueryItemsApiEventsQueryPostData, QueryItemsApiEventsQueryPostError, QueryItemsApiEventsQueryPostResponse, ReadItemsApiFeedbacksGetData, ReadItemsApiFeedbacksGetError, ReadItemsApiFeedbacksGetResponse, QueryItemsApiFeedbacksQueryPostData, QueryItemsApiFeedbacksQueryPostError, QueryItemsApiFeedbacksQueryPostResponse, GetStatsApiStatsGetData, GetStatsApiStatsGetError, GetStatsApiStatsGetResponse, CreateActorApiNamespacesNamespaceNameActorsPostData, CreateActorApiNamespacesNamespaceNameActorsPostError, CreateActorApiNamespacesNamespaceNameActorsPostResponse, ReadActorApiNamespacesNamespaceNameActorsActorNameGetData, ReadActorApiNamespacesNamespaceNameActorsActorNameGetError, ReadActorApiNamespacesNamespaceNameActorsActorNameGetResponse, UpdateActorApiNamespacesNamespaceNameActorsActorNamePutData, UpdateActorApiNamespacesNamespaceNameActorsActorNamePutError, UpdateActorApiNamespacesNamespaceNameActorsActorNamePutResponse, DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteData, DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteError, DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteResponse, CreateItemApiNamespacesNamespaceNameItemsPostData, CreateItemApiNamespacesNamespaceNameItemsPostError, CreateItemApiNamespacesNamespaceNameItemsPostResponse, ReadItemsApiNamespacesNamespaceNameItemsGetData, ReadItemsApiNamespacesNamespaceNameItemsGetError, ReadItemsApiNamespacesNamespaceNameItemsGetResponse, ReadItemApiNamespacesNamespaceNameItemsItemNameGetData, ReadItemApiNamespacesNamespaceNameItemsItemNameGetError, ReadItemApiNamespacesNamespaceNameItemsItemNameGetResponse, UpdateItemApiNamespacesNamespaceNameItemsItemNamePutData, UpdateItemApiNamespacesNamespaceNameItemsItemNamePutError, UpdateItemApiNamespacesNamespaceNameItemsItemNamePutResponse, DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteData, DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteError, DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteResponse, QueryItemsApiNamespacesNamespaceNameItemsQueryPostData, QueryItemsApiNamespacesNamespaceNameItemsQueryPostError, QueryItemsApiNamespacesNamespaceNameItemsQueryPostResponse, CreateEventApiNamespacesNamespaceNameEventsPostData, CreateEventApiNamespacesNamespaceNameEventsPostError, CreateEventApiNamespacesNamespaceNameEventsPostResponse, ReadItemsApiNamespacesNamespaceNameEventsGetData, ReadItemsApiNamespacesNamespaceNameEventsGetError, ReadItemsApiNamespacesNamespaceNameEventsGetResponse, ReadEventApiNamespacesNamespaceNameEventsEventNameGetData, ReadEventApiNamespacesNamespaceNameEventsEventNameGetError, ReadEventApiNamespacesNamespaceNameEventsEventNameGetResponse, UpdateEventApiNamespacesNamespaceNameEventsEventNamePutData, UpdateEventApiNamespacesNamespaceNameEventsEventNamePutError, UpdateEventApiNamespacesNamespaceNameEventsEventNamePutResponse, DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteData, DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteError, DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteResponse, QueryItemsApiNamespacesNamespaceNameEventsQueryPostData, QueryItemsApiNamespacesNamespaceNameEventsQueryPostError, QueryItemsApiNamespacesNamespaceNameEventsQueryPostResponse, CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostData, CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostError, CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostResponse, ReadItemsApiNamespacesNamespaceNameFeedbacksGetData, ReadItemsApiNamespacesNamespaceNameFeedbacksGetError, ReadItemsApiNamespacesNamespaceNameFeedbacksGetResponse, ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetData, ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetError, ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetResponse, UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutData, UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutError, UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutResponse, DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteData, DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteError, DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteResponse, QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostData, QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostError, QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostResponse, GetStatsApiNamespacesNamespaceNameStatsGetData, GetStatsApiNamespacesNamespaceNameStatsGetError, GetStatsApiNamespacesNamespaceNameStatsGetResponse, GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetData, GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetError, GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetResponse, GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetData, GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetError, GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetResponse, GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetData, GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetError, GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetResponse, GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetData, GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetError, GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetResponse, GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetData, GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetError, GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetResponse, GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetData, GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetError, GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetResponse, GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetData, GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetError, GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetResponse, GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetData, GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetError, GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Create Namespace
 */
export const createNamespaceApiNamespacesPost = (options: Options<CreateNamespaceApiNamespacesPostData>) => { return (options?.client ?? client).post<CreateNamespaceApiNamespacesPostResponse, CreateNamespaceApiNamespacesPostError>({
    ...options,
    url: '/api/namespaces'
}); };

/**
 * Read Namespaces
 */
export const readNamespacesApiNamespacesGet = (options?: Options<ReadNamespacesApiNamespacesGetData>) => { return (options?.client ?? client).get<ReadNamespacesApiNamespacesGetResponse, ReadNamespacesApiNamespacesGetError>({
    ...options,
    url: '/api/namespaces'
}); };

/**
 * Read Namespace
 */
export const readNamespaceApiNamespacesNamespaceNameGet = (options: Options<ReadNamespaceApiNamespacesNamespaceNameGetData>) => { return (options?.client ?? client).get<ReadNamespaceApiNamespacesNamespaceNameGetResponse, ReadNamespaceApiNamespacesNamespaceNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Update Namespace
 */
export const updateNamespaceApiNamespacesNamespaceNamePut = (options: Options<UpdateNamespaceApiNamespacesNamespaceNamePutData>) => { return (options?.client ?? client).put<UpdateNamespaceApiNamespacesNamespaceNamePutResponse, UpdateNamespaceApiNamespacesNamespaceNamePutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Delete Namespace
 */
export const deleteNamespaceApiNamespacesNamespaceNameDelete = (options: Options<DeleteNamespaceApiNamespacesNamespaceNameDeleteData>) => { return (options?.client ?? client).delete<DeleteNamespaceApiNamespacesNamespaceNameDeleteResponse, DeleteNamespaceApiNamespacesNamespaceNameDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Query Namespaces
 */
export const queryNamespacesApiNamespacesQueryPost = (options: Options<QueryNamespacesApiNamespacesQueryPostData>) => { return (options?.client ?? client).post<QueryNamespacesApiNamespacesQueryPostResponse, QueryNamespacesApiNamespacesQueryPostError>({
    ...options,
    url: '/api/namespaces/query'
}); };

/**
 * Read Items
 */
export const readItemsApiActorsGet = (options?: Options<ReadItemsApiActorsGetData>) => { return (options?.client ?? client).get<ReadItemsApiActorsGetResponse, ReadItemsApiActorsGetError>({
    ...options,
    url: '/api/actors'
}); };

/**
 * Query Items
 */
export const queryItemsApiActorsQueryPost = (options: Options<QueryItemsApiActorsQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiActorsQueryPostResponse, QueryItemsApiActorsQueryPostError>({
    ...options,
    url: '/api/actors/query'
}); };

/**
 * Read Items
 */
export const readItemsApiItemsGet = (options?: Options<ReadItemsApiItemsGetData>) => { return (options?.client ?? client).get<ReadItemsApiItemsGetResponse, ReadItemsApiItemsGetError>({
    ...options,
    url: '/api/items'
}); };

/**
 * Query Items
 */
export const queryItemsApiItemsQueryPost = (options: Options<QueryItemsApiItemsQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiItemsQueryPostResponse, QueryItemsApiItemsQueryPostError>({
    ...options,
    url: '/api/items/query'
}); };

/**
 * Read Items
 */
export const readItemsApiEventsGet = (options?: Options<ReadItemsApiEventsGetData>) => { return (options?.client ?? client).get<ReadItemsApiEventsGetResponse, ReadItemsApiEventsGetError>({
    ...options,
    url: '/api/events'
}); };

/**
 * Query Items
 */
export const queryItemsApiEventsQueryPost = (options: Options<QueryItemsApiEventsQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiEventsQueryPostResponse, QueryItemsApiEventsQueryPostError>({
    ...options,
    url: '/api/events/query'
}); };

/**
 * Read Items
 */
export const readItemsApiFeedbacksGet = (options?: Options<ReadItemsApiFeedbacksGetData>) => { return (options?.client ?? client).get<ReadItemsApiFeedbacksGetResponse, ReadItemsApiFeedbacksGetError>({
    ...options,
    url: '/api/feedbacks'
}); };

/**
 * Query Items
 */
export const queryItemsApiFeedbacksQueryPost = (options: Options<QueryItemsApiFeedbacksQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiFeedbacksQueryPostResponse, QueryItemsApiFeedbacksQueryPostError>({
    ...options,
    url: '/api/feedbacks/query'
}); };

/**
 * Get Stats
 */
export const getStatsApiStatsGet = (options?: Options<GetStatsApiStatsGetData>) => { return (options?.client ?? client).get<GetStatsApiStatsGetResponse, GetStatsApiStatsGetError>({
    ...options,
    url: '/api/stats'
}); };

/**
 * Create Actor
 */
export const createActorApiNamespacesNamespaceNameActorsPost = (options: Options<CreateActorApiNamespacesNamespaceNameActorsPostData>) => { return (options?.client ?? client).post<CreateActorApiNamespacesNamespaceNameActorsPostResponse, CreateActorApiNamespacesNamespaceNameActorsPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/actors'
}); };

/**
 * Read Actor
 */
export const readActorApiNamespacesNamespaceNameActorsActorNameGet = (options: Options<ReadActorApiNamespacesNamespaceNameActorsActorNameGetData>) => { return (options?.client ?? client).get<ReadActorApiNamespacesNamespaceNameActorsActorNameGetResponse, ReadActorApiNamespacesNamespaceNameActorsActorNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Update Actor
 */
export const updateActorApiNamespacesNamespaceNameActorsActorNamePut = (options: Options<UpdateActorApiNamespacesNamespaceNameActorsActorNamePutData>) => { return (options?.client ?? client).put<UpdateActorApiNamespacesNamespaceNameActorsActorNamePutResponse, UpdateActorApiNamespacesNamespaceNameActorsActorNamePutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Delete Actor
 */
export const deleteActorApiNamespacesNamespaceNameActorsActorNameDelete = (options: Options<DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteData>) => { return (options?.client ?? client).delete<DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteResponse, DeleteActorApiNamespacesNamespaceNameActorsActorNameDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Create Item
 */
export const createItemApiNamespacesNamespaceNameItemsPost = (options: Options<CreateItemApiNamespacesNamespaceNameItemsPostData>) => { return (options?.client ?? client).post<CreateItemApiNamespacesNamespaceNameItemsPostResponse, CreateItemApiNamespacesNamespaceNameItemsPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items'
}); };

/**
 * Read Items
 */
export const readItemsApiNamespacesNamespaceNameItemsGet = (options?: Options<ReadItemsApiNamespacesNamespaceNameItemsGetData>) => { return (options?.client ?? client).get<ReadItemsApiNamespacesNamespaceNameItemsGetResponse, ReadItemsApiNamespacesNamespaceNameItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items'
}); };

/**
 * Read Item
 */
export const readItemApiNamespacesNamespaceNameItemsItemNameGet = (options: Options<ReadItemApiNamespacesNamespaceNameItemsItemNameGetData>) => { return (options?.client ?? client).get<ReadItemApiNamespacesNamespaceNameItemsItemNameGetResponse, ReadItemApiNamespacesNamespaceNameItemsItemNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items/{item_name}'
}); };

/**
 * Update Item
 */
export const updateItemApiNamespacesNamespaceNameItemsItemNamePut = (options: Options<UpdateItemApiNamespacesNamespaceNameItemsItemNamePutData>) => { return (options?.client ?? client).put<UpdateItemApiNamespacesNamespaceNameItemsItemNamePutResponse, UpdateItemApiNamespacesNamespaceNameItemsItemNamePutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items/{item_name}'
}); };

/**
 * Delete Item
 */
export const deleteItemApiNamespacesNamespaceNameItemsItemNameDelete = (options: Options<DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteData>) => { return (options?.client ?? client).delete<DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteResponse, DeleteItemApiNamespacesNamespaceNameItemsItemNameDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items/{item_name}'
}); };

/**
 * Query Items
 */
export const queryItemsApiNamespacesNamespaceNameItemsQueryPost = (options: Options<QueryItemsApiNamespacesNamespaceNameItemsQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiNamespacesNamespaceNameItemsQueryPostResponse, QueryItemsApiNamespacesNamespaceNameItemsQueryPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/items/query'
}); };

/**
 * Create Event
 */
export const createEventApiNamespacesNamespaceNameEventsPost = (options: Options<CreateEventApiNamespacesNamespaceNameEventsPostData>) => { return (options?.client ?? client).post<CreateEventApiNamespacesNamespaceNameEventsPostResponse, CreateEventApiNamespacesNamespaceNameEventsPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events'
}); };

/**
 * Read Items
 */
export const readItemsApiNamespacesNamespaceNameEventsGet = (options?: Options<ReadItemsApiNamespacesNamespaceNameEventsGetData>) => { return (options?.client ?? client).get<ReadItemsApiNamespacesNamespaceNameEventsGetResponse, ReadItemsApiNamespacesNamespaceNameEventsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events'
}); };

/**
 * Read Event
 */
export const readEventApiNamespacesNamespaceNameEventsEventNameGet = (options: Options<ReadEventApiNamespacesNamespaceNameEventsEventNameGetData>) => { return (options?.client ?? client).get<ReadEventApiNamespacesNamespaceNameEventsEventNameGetResponse, ReadEventApiNamespacesNamespaceNameEventsEventNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events/{event_name}'
}); };

/**
 * Update Event
 */
export const updateEventApiNamespacesNamespaceNameEventsEventNamePut = (options: Options<UpdateEventApiNamespacesNamespaceNameEventsEventNamePutData>) => { return (options?.client ?? client).put<UpdateEventApiNamespacesNamespaceNameEventsEventNamePutResponse, UpdateEventApiNamespacesNamespaceNameEventsEventNamePutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events/{event_name}'
}); };

/**
 * Delete Event
 */
export const deleteEventApiNamespacesNamespaceNameEventsEventNameDelete = (options: Options<DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteData>) => { return (options?.client ?? client).delete<DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteResponse, DeleteEventApiNamespacesNamespaceNameEventsEventNameDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events/{event_name}'
}); };

/**
 * Query Items
 */
export const queryItemsApiNamespacesNamespaceNameEventsQueryPost = (options: Options<QueryItemsApiNamespacesNamespaceNameEventsQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiNamespacesNamespaceNameEventsQueryPostResponse, QueryItemsApiNamespacesNamespaceNameEventsQueryPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/events/query'
}); };

/**
 * Create Feedback
 */
export const createFeedbackApiNamespacesNamespaceNameFeedbacksPost = (options: Options<CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostData>) => { return (options?.client ?? client).post<CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostResponse, CreateFeedbackApiNamespacesNamespaceNameFeedbacksPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks'
}); };

/**
 * Read Items
 */
export const readItemsApiNamespacesNamespaceNameFeedbacksGet = (options?: Options<ReadItemsApiNamespacesNamespaceNameFeedbacksGetData>) => { return (options?.client ?? client).get<ReadItemsApiNamespacesNamespaceNameFeedbacksGetResponse, ReadItemsApiNamespacesNamespaceNameFeedbacksGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks'
}); };

/**
 * Read Feedback
 */
export const readFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGet = (options: Options<ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetData>) => { return (options?.client ?? client).get<ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetResponse, ReadFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Update Feedback
 */
export const updateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPut = (options: Options<UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutData>) => { return (options?.client ?? client).put<UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutResponse, UpdateFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdPutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Delete Feedback
 */
export const deleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDelete = (options: Options<DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteData>) => { return (options?.client ?? client).delete<DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteResponse, DeleteFeedbackApiNamespacesNamespaceNameFeedbacksFeedbackIdDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Query Items
 */
export const queryItemsApiNamespacesNamespaceNameFeedbacksQueryPost = (options: Options<QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostData>) => { return (options?.client ?? client).post<QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostResponse, QueryItemsApiNamespacesNamespaceNameFeedbacksQueryPostError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/feedbacks/query'
}); };

/**
 * Get Stats
 */
export const getStatsApiNamespacesNamespaceNameStatsGet = (options: Options<GetStatsApiNamespacesNamespaceNameStatsGetData>) => { return (options?.client ?? client).get<GetStatsApiNamespacesNamespaceNameStatsGetResponse, GetStatsApiNamespacesNamespaceNameStatsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/stats'
}); };

/**
 * Get Minmax
 */
export const getMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGet = (options: Options<GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetData>) => { return (options?.client ?? client).get<GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetResponse, GetMinmaxApiNamespacesNamespaceNameReportsAverageMinmaxGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/average/minmax'
}); };

/**
 * Get Item Minmax
 */
export const getItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGet = (options: Options<GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetData>) => { return (options?.client ?? client).get<GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetResponse, GetItemMinmaxApiNamespacesNamespaceNameReportsAverageItemItemNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/average/item/{item_name}'
}); };

/**
 * Get All Items Minmax
 */
export const getAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGet = (options: Options<GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetData>) => { return (options?.client ?? client).get<GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetResponse, GetAllItemsMinmaxApiNamespacesNamespaceNameReportsAverageItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/average/items'
}); };

/**
 * Get Random Item
 */
export const getRandomItemApiNamespacesNamespaceNameReportsRandomItemGet = (options: Options<GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetData>) => { return (options?.client ?? client).get<GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetResponse, GetRandomItemApiNamespacesNamespaceNameReportsRandomItemGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/random/item'
}); };

/**
 * Get Random Items
 */
export const getRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGet = (options: Options<GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetData>) => { return (options?.client ?? client).get<GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetResponse, GetRandomItemsApiNamespacesNamespaceNameReportsRandomItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/random/items'
}); };

/**
 * Get Items With Most Events
 */
export const getItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGet = (options: Options<GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetResponse, GetItemsWithMostEventsApiNamespacesNamespaceNameReportsMostEventsItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/most_events/items'
}); };

/**
 * Get Items With Most Feedback
 */
export const getItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGet = (options: Options<GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetResponse, GetItemsWithMostFeedbackApiNamespacesNamespaceNameReportsMostFeedbackItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/most_feedback/items'
}); };

/**
 * Get Items With Latest Events
 */
export const getItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGet = (options: Options<GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetResponse, GetItemsWithLatestEventsApiNamespacesNamespaceNameReportsLatestEventsItemsGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}/reports/latest_events/items'
}); };