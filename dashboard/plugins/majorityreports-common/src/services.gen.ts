// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { CreateNamespaceApiNamespacesPostData, CreateNamespaceApiNamespacesPostError, CreateNamespaceApiNamespacesPostResponse, ReadNamespacesApiNamespacesGetData, ReadNamespacesApiNamespacesGetError, ReadNamespacesApiNamespacesGetResponse, ReadLatestNamespacesApiNamespacesLatestGetData, ReadLatestNamespacesApiNamespacesLatestGetError, ReadLatestNamespacesApiNamespacesLatestGetResponse, ReadNamespaceApiNamespacesNamespaceNameGetData, ReadNamespaceApiNamespacesNamespaceNameGetError, ReadNamespaceApiNamespacesNamespaceNameGetResponse, UpdateNamespaceApiNamespacesNamespaceNamePutData, UpdateNamespaceApiNamespacesNamespaceNamePutError, UpdateNamespaceApiNamespacesNamespaceNamePutResponse, DeleteNamespaceApiNamespacesNamespaceNameDeleteData, DeleteNamespaceApiNamespacesNamespaceNameDeleteError, DeleteNamespaceApiNamespacesNamespaceNameDeleteResponse, CreateActorApiActorsPostData, CreateActorApiActorsPostError, CreateActorApiActorsPostResponse, ReadActorsApiActorsGetData, ReadActorsApiActorsGetError, ReadActorsApiActorsGetResponse, ReadLatestActorsApiActorsLatestGetData, ReadLatestActorsApiActorsLatestGetError, ReadLatestActorsApiActorsLatestGetResponse, ReadActorApiActorsActorNameGetData, ReadActorApiActorsActorNameGetError, ReadActorApiActorsActorNameGetResponse, UpdateActorApiActorsActorNamePutData, UpdateActorApiActorsActorNamePutError, UpdateActorApiActorsActorNamePutResponse, DeleteActorApiActorsActorNameDeleteData, DeleteActorApiActorsActorNameDeleteError, DeleteActorApiActorsActorNameDeleteResponse, CreateItemApiItemsPostData, CreateItemApiItemsPostError, CreateItemApiItemsPostResponse, ReadItemsApiItemsGetData, ReadItemsApiItemsGetError, ReadItemsApiItemsGetResponse, ReadLatestItemsApiItemsLatestGetData, ReadLatestItemsApiItemsLatestGetError, ReadLatestItemsApiItemsLatestGetResponse, ReadItemApiItemsItemNameGetData, ReadItemApiItemsItemNameGetError, ReadItemApiItemsItemNameGetResponse, UpdateItemApiItemsItemNamePutData, UpdateItemApiItemsItemNamePutError, UpdateItemApiItemsItemNamePutResponse, DeleteItemApiItemsItemNameDeleteData, DeleteItemApiItemsItemNameDeleteError, DeleteItemApiItemsItemNameDeleteResponse, CreateEventApiEventsPostData, CreateEventApiEventsPostError, CreateEventApiEventsPostResponse, ReadEventsApiEventsGetData, ReadEventsApiEventsGetError, ReadEventsApiEventsGetResponse, ReadLatestEventsApiEventsLatestGetData, ReadLatestEventsApiEventsLatestGetError, ReadLatestEventsApiEventsLatestGetResponse, ReadEventApiEventsEventNameGetData, ReadEventApiEventsEventNameGetError, ReadEventApiEventsEventNameGetResponse, UpdateEventApiEventsEventNamePutData, UpdateEventApiEventsEventNamePutError, UpdateEventApiEventsEventNamePutResponse, DeleteEventApiEventsEventNameDeleteData, DeleteEventApiEventsEventNameDeleteError, DeleteEventApiEventsEventNameDeleteResponse, CreateFeedbackApiFeedbacksPostData, CreateFeedbackApiFeedbacksPostError, CreateFeedbackApiFeedbacksPostResponse, ReadFeedbacksApiFeedbacksGetData, ReadFeedbacksApiFeedbacksGetError, ReadFeedbacksApiFeedbacksGetResponse, ReadLatestFeedbacksApiFeedbacksLatestGetData, ReadLatestFeedbacksApiFeedbacksLatestGetError, ReadLatestFeedbacksApiFeedbacksLatestGetResponse, ReadFeedbackApiFeedbacksFeedbackIdGetData, ReadFeedbackApiFeedbacksFeedbackIdGetError, ReadFeedbackApiFeedbacksFeedbackIdGetResponse, UpdateFeedbackApiFeedbacksFeedbackIdPutData, UpdateFeedbackApiFeedbacksFeedbackIdPutError, UpdateFeedbackApiFeedbacksFeedbackIdPutResponse, DeleteFeedbackApiFeedbacksFeedbackIdDeleteData, DeleteFeedbackApiFeedbacksFeedbackIdDeleteError, DeleteFeedbackApiFeedbacksFeedbackIdDeleteResponse, GetStatsApiStatsGetData, GetStatsApiStatsGetError, GetStatsApiStatsGetResponse, CreateActorApiNamespaceNamespaceNameActorsPostData, CreateActorApiNamespaceNamespaceNameActorsPostError, CreateActorApiNamespaceNamespaceNameActorsPostResponse, ReadActorsApiNamespaceNamespaceNameActorsGetData, ReadActorsApiNamespaceNamespaceNameActorsGetError, ReadActorsApiNamespaceNamespaceNameActorsGetResponse, ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetData, ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetError, ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetResponse, ReadActorApiNamespaceNamespaceNameActorsActorNameGetData, ReadActorApiNamespaceNamespaceNameActorsActorNameGetError, ReadActorApiNamespaceNamespaceNameActorsActorNameGetResponse, UpdateActorApiNamespaceNamespaceNameActorsActorNamePutData, UpdateActorApiNamespaceNamespaceNameActorsActorNamePutError, UpdateActorApiNamespaceNamespaceNameActorsActorNamePutResponse, DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteData, DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteError, DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteResponse, CreateItemApiNamespaceNamespaceNameItemsPostData, CreateItemApiNamespaceNamespaceNameItemsPostError, CreateItemApiNamespaceNamespaceNameItemsPostResponse, ReadItemsApiNamespaceNamespaceNameItemsGetData, ReadItemsApiNamespaceNamespaceNameItemsGetError, ReadItemsApiNamespaceNamespaceNameItemsGetResponse, ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetData, ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetError, ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetResponse, ReadItemApiNamespaceNamespaceNameItemsItemNameGetData, ReadItemApiNamespaceNamespaceNameItemsItemNameGetError, ReadItemApiNamespaceNamespaceNameItemsItemNameGetResponse, UpdateItemApiNamespaceNamespaceNameItemsItemNamePutData, UpdateItemApiNamespaceNamespaceNameItemsItemNamePutError, UpdateItemApiNamespaceNamespaceNameItemsItemNamePutResponse, DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteData, DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteError, DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteResponse, CreateEventApiNamespaceNamespaceNameEventsPostData, CreateEventApiNamespaceNamespaceNameEventsPostError, CreateEventApiNamespaceNamespaceNameEventsPostResponse, ReadEventsApiNamespaceNamespaceNameEventsGetData, ReadEventsApiNamespaceNamespaceNameEventsGetError, ReadEventsApiNamespaceNamespaceNameEventsGetResponse, ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetData, ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetError, ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetResponse, ReadEventApiNamespaceNamespaceNameEventsEventNameGetData, ReadEventApiNamespaceNamespaceNameEventsEventNameGetError, ReadEventApiNamespaceNamespaceNameEventsEventNameGetResponse, UpdateEventApiNamespaceNamespaceNameEventsEventNamePutData, UpdateEventApiNamespaceNamespaceNameEventsEventNamePutError, UpdateEventApiNamespaceNamespaceNameEventsEventNamePutResponse, DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteData, DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteError, DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteResponse, CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostData, CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostError, CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostResponse, ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetData, ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetError, ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetResponse, ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetData, ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetError, ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetResponse, ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetData, ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetError, ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetResponse, UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutData, UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutError, UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutResponse, DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteData, DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteError, DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteResponse, GetStatsApiNamespaceNamespaceNameStatsGetData, GetStatsApiNamespaceNamespaceNameStatsGetError, GetStatsApiNamespaceNamespaceNameStatsGetResponse, GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetData, GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetError, GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetResponse, GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetData, GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetError, GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetResponse, GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetData, GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetError, GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetResponse, GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetData, GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetError, GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetResponse, GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetData, GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetError, GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetResponse, GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetData, GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetError, GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetResponse, GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetData, GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetError, GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetResponse, GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetData, GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetError, GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Create Namespace
 */
export const createNamespaceApiNamespacesPost = (options: Options<CreateNamespaceApiNamespacesPostData>) => { return (options?.client ?? client).post<CreateNamespaceApiNamespacesPostResponse, CreateNamespaceApiNamespacesPostError>({
    ...options,
    url: '/api/namespaces'
}); };

/**
 * Read Namespaces
 */
export const readNamespacesApiNamespacesGet = (options?: Options<ReadNamespacesApiNamespacesGetData>) => { return (options?.client ?? client).get<ReadNamespacesApiNamespacesGetResponse, ReadNamespacesApiNamespacesGetError>({
    ...options,
    url: '/api/namespaces'
}); };

/**
 * Read Latest Namespaces
 */
export const readLatestNamespacesApiNamespacesLatestGet = (options?: Options<ReadLatestNamespacesApiNamespacesLatestGetData>) => { return (options?.client ?? client).get<ReadLatestNamespacesApiNamespacesLatestGetResponse, ReadLatestNamespacesApiNamespacesLatestGetError>({
    ...options,
    url: '/api/namespaces/latest'
}); };

/**
 * Read Namespace
 */
export const readNamespaceApiNamespacesNamespaceNameGet = (options: Options<ReadNamespaceApiNamespacesNamespaceNameGetData>) => { return (options?.client ?? client).get<ReadNamespaceApiNamespacesNamespaceNameGetResponse, ReadNamespaceApiNamespacesNamespaceNameGetError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Update Namespace
 */
export const updateNamespaceApiNamespacesNamespaceNamePut = (options: Options<UpdateNamespaceApiNamespacesNamespaceNamePutData>) => { return (options?.client ?? client).put<UpdateNamespaceApiNamespacesNamespaceNamePutResponse, UpdateNamespaceApiNamespacesNamespaceNamePutError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Delete Namespace
 */
export const deleteNamespaceApiNamespacesNamespaceNameDelete = (options: Options<DeleteNamespaceApiNamespacesNamespaceNameDeleteData>) => { return (options?.client ?? client).delete<DeleteNamespaceApiNamespacesNamespaceNameDeleteResponse, DeleteNamespaceApiNamespacesNamespaceNameDeleteError>({
    ...options,
    url: '/api/namespaces/{namespace_name}'
}); };

/**
 * Create Actor
 */
export const createActorApiActorsPost = (options: Options<CreateActorApiActorsPostData>) => { return (options?.client ?? client).post<CreateActorApiActorsPostResponse, CreateActorApiActorsPostError>({
    ...options,
    url: '/api/actors'
}); };

/**
 * Read Actors
 */
export const readActorsApiActorsGet = (options?: Options<ReadActorsApiActorsGetData>) => { return (options?.client ?? client).get<ReadActorsApiActorsGetResponse, ReadActorsApiActorsGetError>({
    ...options,
    url: '/api/actors'
}); };

/**
 * Read Latest Actors
 */
export const readLatestActorsApiActorsLatestGet = (options?: Options<ReadLatestActorsApiActorsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestActorsApiActorsLatestGetResponse, ReadLatestActorsApiActorsLatestGetError>({
    ...options,
    url: '/api/actors/latest'
}); };

/**
 * Read Actor
 */
export const readActorApiActorsActorNameGet = (options: Options<ReadActorApiActorsActorNameGetData>) => { return (options?.client ?? client).get<ReadActorApiActorsActorNameGetResponse, ReadActorApiActorsActorNameGetError>({
    ...options,
    url: '/api/actors/{actor_name}'
}); };

/**
 * Update Actor
 */
export const updateActorApiActorsActorNamePut = (options: Options<UpdateActorApiActorsActorNamePutData>) => { return (options?.client ?? client).put<UpdateActorApiActorsActorNamePutResponse, UpdateActorApiActorsActorNamePutError>({
    ...options,
    url: '/api/actors/{actor_name}'
}); };

/**
 * Delete Actor
 */
export const deleteActorApiActorsActorNameDelete = (options: Options<DeleteActorApiActorsActorNameDeleteData>) => { return (options?.client ?? client).delete<DeleteActorApiActorsActorNameDeleteResponse, DeleteActorApiActorsActorNameDeleteError>({
    ...options,
    url: '/api/actors/{actor_name}'
}); };

/**
 * Create Item
 */
export const createItemApiItemsPost = (options: Options<CreateItemApiItemsPostData>) => { return (options?.client ?? client).post<CreateItemApiItemsPostResponse, CreateItemApiItemsPostError>({
    ...options,
    url: '/api/items'
}); };

/**
 * Read Items
 */
export const readItemsApiItemsGet = (options?: Options<ReadItemsApiItemsGetData>) => { return (options?.client ?? client).get<ReadItemsApiItemsGetResponse, ReadItemsApiItemsGetError>({
    ...options,
    url: '/api/items'
}); };

/**
 * Read Latest Items
 */
export const readLatestItemsApiItemsLatestGet = (options?: Options<ReadLatestItemsApiItemsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestItemsApiItemsLatestGetResponse, ReadLatestItemsApiItemsLatestGetError>({
    ...options,
    url: '/api/items/latest'
}); };

/**
 * Read Item
 */
export const readItemApiItemsItemNameGet = (options: Options<ReadItemApiItemsItemNameGetData>) => { return (options?.client ?? client).get<ReadItemApiItemsItemNameGetResponse, ReadItemApiItemsItemNameGetError>({
    ...options,
    url: '/api/items/{item_name}'
}); };

/**
 * Update Item
 */
export const updateItemApiItemsItemNamePut = (options: Options<UpdateItemApiItemsItemNamePutData>) => { return (options?.client ?? client).put<UpdateItemApiItemsItemNamePutResponse, UpdateItemApiItemsItemNamePutError>({
    ...options,
    url: '/api/items/{item_name}'
}); };

/**
 * Delete Item
 */
export const deleteItemApiItemsItemNameDelete = (options: Options<DeleteItemApiItemsItemNameDeleteData>) => { return (options?.client ?? client).delete<DeleteItemApiItemsItemNameDeleteResponse, DeleteItemApiItemsItemNameDeleteError>({
    ...options,
    url: '/api/items/{item_name}'
}); };

/**
 * Create Event
 */
export const createEventApiEventsPost = (options: Options<CreateEventApiEventsPostData>) => { return (options?.client ?? client).post<CreateEventApiEventsPostResponse, CreateEventApiEventsPostError>({
    ...options,
    url: '/api/events'
}); };

/**
 * Read Events
 */
export const readEventsApiEventsGet = (options?: Options<ReadEventsApiEventsGetData>) => { return (options?.client ?? client).get<ReadEventsApiEventsGetResponse, ReadEventsApiEventsGetError>({
    ...options,
    url: '/api/events'
}); };

/**
 * Read Latest Events
 */
export const readLatestEventsApiEventsLatestGet = (options?: Options<ReadLatestEventsApiEventsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestEventsApiEventsLatestGetResponse, ReadLatestEventsApiEventsLatestGetError>({
    ...options,
    url: '/api/events/latest'
}); };

/**
 * Read Event
 */
export const readEventApiEventsEventNameGet = (options: Options<ReadEventApiEventsEventNameGetData>) => { return (options?.client ?? client).get<ReadEventApiEventsEventNameGetResponse, ReadEventApiEventsEventNameGetError>({
    ...options,
    url: '/api/events/{event_name}'
}); };

/**
 * Update Event
 */
export const updateEventApiEventsEventNamePut = (options: Options<UpdateEventApiEventsEventNamePutData>) => { return (options?.client ?? client).put<UpdateEventApiEventsEventNamePutResponse, UpdateEventApiEventsEventNamePutError>({
    ...options,
    url: '/api/events/{event_name}'
}); };

/**
 * Delete Event
 */
export const deleteEventApiEventsEventNameDelete = (options: Options<DeleteEventApiEventsEventNameDeleteData>) => { return (options?.client ?? client).delete<DeleteEventApiEventsEventNameDeleteResponse, DeleteEventApiEventsEventNameDeleteError>({
    ...options,
    url: '/api/events/{event_name}'
}); };

/**
 * Create Feedback
 */
export const createFeedbackApiFeedbacksPost = (options: Options<CreateFeedbackApiFeedbacksPostData>) => { return (options?.client ?? client).post<CreateFeedbackApiFeedbacksPostResponse, CreateFeedbackApiFeedbacksPostError>({
    ...options,
    url: '/api/feedbacks'
}); };

/**
 * Read Feedbacks
 */
export const readFeedbacksApiFeedbacksGet = (options?: Options<ReadFeedbacksApiFeedbacksGetData>) => { return (options?.client ?? client).get<ReadFeedbacksApiFeedbacksGetResponse, ReadFeedbacksApiFeedbacksGetError>({
    ...options,
    url: '/api/feedbacks'
}); };

/**
 * Read Latest Feedbacks
 */
export const readLatestFeedbacksApiFeedbacksLatestGet = (options?: Options<ReadLatestFeedbacksApiFeedbacksLatestGetData>) => { return (options?.client ?? client).get<ReadLatestFeedbacksApiFeedbacksLatestGetResponse, ReadLatestFeedbacksApiFeedbacksLatestGetError>({
    ...options,
    url: '/api/feedbacks/latest'
}); };

/**
 * Read Feedback
 */
export const readFeedbackApiFeedbacksFeedbackIdGet = (options: Options<ReadFeedbackApiFeedbacksFeedbackIdGetData>) => { return (options?.client ?? client).get<ReadFeedbackApiFeedbacksFeedbackIdGetResponse, ReadFeedbackApiFeedbacksFeedbackIdGetError>({
    ...options,
    url: '/api/feedbacks/{feedback_id}'
}); };

/**
 * Update Feedback
 */
export const updateFeedbackApiFeedbacksFeedbackIdPut = (options: Options<UpdateFeedbackApiFeedbacksFeedbackIdPutData>) => { return (options?.client ?? client).put<UpdateFeedbackApiFeedbacksFeedbackIdPutResponse, UpdateFeedbackApiFeedbacksFeedbackIdPutError>({
    ...options,
    url: '/api/feedbacks/{feedback_id}'
}); };

/**
 * Delete Feedback
 */
export const deleteFeedbackApiFeedbacksFeedbackIdDelete = (options: Options<DeleteFeedbackApiFeedbacksFeedbackIdDeleteData>) => { return (options?.client ?? client).delete<DeleteFeedbackApiFeedbacksFeedbackIdDeleteResponse, DeleteFeedbackApiFeedbacksFeedbackIdDeleteError>({
    ...options,
    url: '/api/feedbacks/{feedback_id}'
}); };

/**
 * Get Stats
 */
export const getStatsApiStatsGet = (options?: Options<GetStatsApiStatsGetData>) => { return (options?.client ?? client).get<GetStatsApiStatsGetResponse, GetStatsApiStatsGetError>({
    ...options,
    url: '/api/stats'
}); };

/**
 * Create Actor
 */
export const createActorApiNamespaceNamespaceNameActorsPost = (options: Options<CreateActorApiNamespaceNamespaceNameActorsPostData>) => { return (options?.client ?? client).post<CreateActorApiNamespaceNamespaceNameActorsPostResponse, CreateActorApiNamespaceNamespaceNameActorsPostError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors'
}); };

/**
 * Read Actors
 */
export const readActorsApiNamespaceNamespaceNameActorsGet = (options: Options<ReadActorsApiNamespaceNamespaceNameActorsGetData>) => { return (options?.client ?? client).get<ReadActorsApiNamespaceNamespaceNameActorsGetResponse, ReadActorsApiNamespaceNamespaceNameActorsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors'
}); };

/**
 * Read Latest Actors
 */
export const readLatestActorsApiNamespaceNamespaceNameActorsLatestGet = (options: Options<ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetResponse, ReadLatestActorsApiNamespaceNamespaceNameActorsLatestGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors/latest'
}); };

/**
 * Read Actor
 */
export const readActorApiNamespaceNamespaceNameActorsActorNameGet = (options: Options<ReadActorApiNamespaceNamespaceNameActorsActorNameGetData>) => { return (options?.client ?? client).get<ReadActorApiNamespaceNamespaceNameActorsActorNameGetResponse, ReadActorApiNamespaceNamespaceNameActorsActorNameGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Update Actor
 */
export const updateActorApiNamespaceNamespaceNameActorsActorNamePut = (options: Options<UpdateActorApiNamespaceNamespaceNameActorsActorNamePutData>) => { return (options?.client ?? client).put<UpdateActorApiNamespaceNamespaceNameActorsActorNamePutResponse, UpdateActorApiNamespaceNamespaceNameActorsActorNamePutError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Delete Actor
 */
export const deleteActorApiNamespaceNamespaceNameActorsActorNameDelete = (options: Options<DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteData>) => { return (options?.client ?? client).delete<DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteResponse, DeleteActorApiNamespaceNamespaceNameActorsActorNameDeleteError>({
    ...options,
    url: '/api/namespace/{namespace_name}/actors/{actor_name}'
}); };

/**
 * Create Item
 */
export const createItemApiNamespaceNamespaceNameItemsPost = (options: Options<CreateItemApiNamespaceNamespaceNameItemsPostData>) => { return (options?.client ?? client).post<CreateItemApiNamespaceNamespaceNameItemsPostResponse, CreateItemApiNamespaceNamespaceNameItemsPostError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items'
}); };

/**
 * Read Items
 */
export const readItemsApiNamespaceNamespaceNameItemsGet = (options: Options<ReadItemsApiNamespaceNamespaceNameItemsGetData>) => { return (options?.client ?? client).get<ReadItemsApiNamespaceNamespaceNameItemsGetResponse, ReadItemsApiNamespaceNamespaceNameItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items'
}); };

/**
 * Read Latest Items
 */
export const readLatestItemsApiNamespaceNamespaceNameItemsLatestGet = (options: Options<ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetResponse, ReadLatestItemsApiNamespaceNamespaceNameItemsLatestGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items/latest'
}); };

/**
 * Read Item
 */
export const readItemApiNamespaceNamespaceNameItemsItemNameGet = (options: Options<ReadItemApiNamespaceNamespaceNameItemsItemNameGetData>) => { return (options?.client ?? client).get<ReadItemApiNamespaceNamespaceNameItemsItemNameGetResponse, ReadItemApiNamespaceNamespaceNameItemsItemNameGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items/{item_name}'
}); };

/**
 * Update Item
 */
export const updateItemApiNamespaceNamespaceNameItemsItemNamePut = (options: Options<UpdateItemApiNamespaceNamespaceNameItemsItemNamePutData>) => { return (options?.client ?? client).put<UpdateItemApiNamespaceNamespaceNameItemsItemNamePutResponse, UpdateItemApiNamespaceNamespaceNameItemsItemNamePutError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items/{item_name}'
}); };

/**
 * Delete Item
 */
export const deleteItemApiNamespaceNamespaceNameItemsItemNameDelete = (options: Options<DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteData>) => { return (options?.client ?? client).delete<DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteResponse, DeleteItemApiNamespaceNamespaceNameItemsItemNameDeleteError>({
    ...options,
    url: '/api/namespace/{namespace_name}/items/{item_name}'
}); };

/**
 * Create Event
 */
export const createEventApiNamespaceNamespaceNameEventsPost = (options: Options<CreateEventApiNamespaceNamespaceNameEventsPostData>) => { return (options?.client ?? client).post<CreateEventApiNamespaceNamespaceNameEventsPostResponse, CreateEventApiNamespaceNamespaceNameEventsPostError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events'
}); };

/**
 * Read Events
 */
export const readEventsApiNamespaceNamespaceNameEventsGet = (options: Options<ReadEventsApiNamespaceNamespaceNameEventsGetData>) => { return (options?.client ?? client).get<ReadEventsApiNamespaceNamespaceNameEventsGetResponse, ReadEventsApiNamespaceNamespaceNameEventsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events'
}); };

/**
 * Read Latest Events
 */
export const readLatestEventsApiNamespaceNamespaceNameEventsLatestGet = (options: Options<ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetData>) => { return (options?.client ?? client).get<ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetResponse, ReadLatestEventsApiNamespaceNamespaceNameEventsLatestGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events/latest'
}); };

/**
 * Read Event
 */
export const readEventApiNamespaceNamespaceNameEventsEventNameGet = (options: Options<ReadEventApiNamespaceNamespaceNameEventsEventNameGetData>) => { return (options?.client ?? client).get<ReadEventApiNamespaceNamespaceNameEventsEventNameGetResponse, ReadEventApiNamespaceNamespaceNameEventsEventNameGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events/{event_name}'
}); };

/**
 * Update Event
 */
export const updateEventApiNamespaceNamespaceNameEventsEventNamePut = (options: Options<UpdateEventApiNamespaceNamespaceNameEventsEventNamePutData>) => { return (options?.client ?? client).put<UpdateEventApiNamespaceNamespaceNameEventsEventNamePutResponse, UpdateEventApiNamespaceNamespaceNameEventsEventNamePutError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events/{event_name}'
}); };

/**
 * Delete Event
 */
export const deleteEventApiNamespaceNamespaceNameEventsEventNameDelete = (options: Options<DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteData>) => { return (options?.client ?? client).delete<DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteResponse, DeleteEventApiNamespaceNamespaceNameEventsEventNameDeleteError>({
    ...options,
    url: '/api/namespace/{namespace_name}/events/{event_name}'
}); };

/**
 * Create Feedback
 */
export const createFeedbackApiNamespaceNamespaceNameFeedbacksPost = (options: Options<CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostData>) => { return (options?.client ?? client).post<CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostResponse, CreateFeedbackApiNamespaceNamespaceNameFeedbacksPostError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks'
}); };

/**
 * Read Feedbacks
 */
export const readFeedbacksApiNamespaceNamespaceNameFeedbacksGet = (options: Options<ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetData>) => { return (options?.client ?? client).get<ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetResponse, ReadFeedbacksApiNamespaceNamespaceNameFeedbacksGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks'
}); };

/**
 * Read Latest Feedbacks
 */
export const readLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGet = (options: Options<ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetData>) => { return (options?.client ?? client).get<ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetResponse, ReadLatestFeedbacksApiNamespaceNamespaceNameFeedbacksLatestGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks/latest'
}); };

/**
 * Read Feedback
 */
export const readFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGet = (options: Options<ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetData>) => { return (options?.client ?? client).get<ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetResponse, ReadFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Update Feedback
 */
export const updateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPut = (options: Options<UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutData>) => { return (options?.client ?? client).put<UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutResponse, UpdateFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdPutError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Delete Feedback
 */
export const deleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDelete = (options: Options<DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteData>) => { return (options?.client ?? client).delete<DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteResponse, DeleteFeedbackApiNamespaceNamespaceNameFeedbacksFeedbackIdDeleteError>({
    ...options,
    url: '/api/namespace/{namespace_name}/feedbacks/{feedback_id}'
}); };

/**
 * Get Stats
 */
export const getStatsApiNamespaceNamespaceNameStatsGet = (options: Options<GetStatsApiNamespaceNamespaceNameStatsGetData>) => { return (options?.client ?? client).get<GetStatsApiNamespaceNamespaceNameStatsGetResponse, GetStatsApiNamespaceNamespaceNameStatsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/stats'
}); };

/**
 * Get Minmax
 */
export const getMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGet = (options: Options<GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetData>) => { return (options?.client ?? client).get<GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetResponse, GetMinmaxApiNamespaceNamespaceNameReportsAverageMinmaxGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/average/minmax'
}); };

/**
 * Get Item Minmax
 */
export const getItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGet = (options: Options<GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetData>) => { return (options?.client ?? client).get<GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetResponse, GetItemMinmaxApiNamespaceNamespaceNameReportsAverageItemItemNameGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/average/item/{item_name}'
}); };

/**
 * Get All Items Minmax
 */
export const getAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGet = (options: Options<GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetData>) => { return (options?.client ?? client).get<GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetResponse, GetAllItemsMinmaxApiNamespaceNamespaceNameReportsAverageItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/average/items'
}); };

/**
 * Get Random Item
 */
export const getRandomItemApiNamespaceNamespaceNameReportsRandomItemGet = (options: Options<GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetData>) => { return (options?.client ?? client).get<GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetResponse, GetRandomItemApiNamespaceNamespaceNameReportsRandomItemGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/random/item'
}); };

/**
 * Get Random Items
 */
export const getRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGet = (options: Options<GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetData>) => { return (options?.client ?? client).get<GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetResponse, GetRandomItemsApiNamespaceNamespaceNameReportsRandomItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/random/items'
}); };

/**
 * Get Items With Most Events
 */
export const getItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGet = (options: Options<GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetResponse, GetItemsWithMostEventsApiNamespaceNamespaceNameReportsMostEventsItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/most_events/items'
}); };

/**
 * Get Items With Most Feedback
 */
export const getItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGet = (options: Options<GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetResponse, GetItemsWithMostFeedbackApiNamespaceNamespaceNameReportsMostFeedbackItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/most_feedback/items'
}); };

/**
 * Get Items With Latest Events
 */
export const getItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGet = (options: Options<GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetData>) => { return (options?.client ?? client).get<GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetResponse, GetItemsWithLatestEventsApiNamespaceNamespaceNameReportsLatestEventsItemsGetError>({
    ...options,
    url: '/api/namespace/{namespace_name}/reports/latest_events/items'
}); };